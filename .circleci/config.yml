version: 2.1

jobs:
  build:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run: 
          working_directory: ~/opencti/opencti-front
          command: yarn install
      - run:
          working_directory: ~/opencti/opencti-front
          command: yarn build
      - run:
          working_directory: ~/opencti/opencti-graphql
          command: yarn install
      - run:
          working_directory: ~/opencti/opencti-graphql
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - opencti
  test:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
        environment:
          APP__REACTIVE: false
          GRAKN__HOSTNAME: 127.0.0.1
          ELASTICSEARCH__HOSTNAME: 127.0.0.1
      - image: graknlabs/grakn:1.5.6
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.7.1
        environment:
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for Grakn
          command: dockerize -wait tcp://localhost:48555 -timeout 1m
      - run:
          name: Wait for ElasticSearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m        
      - run:
          working_directory: ~/opencti/opencti-graphql
          command: yarn test

  package_rolling:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run: git remote add opencti ssh://git-OLOszi5F@opencti.io:/~/git-OLOszi5F.git && git push opencti master
      - run: mkdir release
      - run: cp -a opencti-graphql release/opencti
      - run: cp -a opencti-integration release/opencti/integration
      - run: cp -a opencti-worker release/opencti/worker
      - run: 
          working_directory: ~/opencti/release
          command: tar -zcvf "opencti-$(date '+%Y%m%d').tar.gz" opencti
      - run: 
          working_directory: ~/opencti/release
          command: scp "opencti-$(date '+%Y%m%d').tar.gz" git-OLOszi5F@opencti.io:/dns/io/opencti/releases/

  deploy_demo:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-fiqid45E@opencti.io:/~/opencti-fiqid45E.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-graphql/public/ ./opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-graphql/dist/ ./opencti-graphql/dist/
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_reference:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts    
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir -p deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-b0gY5UHe@opencti.io:/~/opencti-b0gY5UHe.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master          
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-graphql/public/ ./opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-graphql/dist/ ./opencti-graphql/dist/
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_documentation:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:11-stretch
    steps:
      - checkout
      - run:
          working_directory: ~/opencti/opencti-documentation
          name: Deploying the documentation to Github pages
          command: |
            git config --global user.email "SamuelHassine@users.noreply.github.com"
            git config --global user.name "Samuel Hassine"
            echo "machine github.com login SamuelHassine password $GITHUB_TOKEN" > ~/.netrc
            cd website && yarn install && ORGANIZATION_NAME=OpenCTI-Platform PROJECT_NAME=docs GIT_USER=SamuelHassine yarn run publish-gh-pages

workflows:
  opencti:
    jobs:
      - build
      - test:
          requires:
            - build
      - package_rolling:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
      - deploy_demo:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
      - deploy_reference:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
      - deploy_documentation:
          filters:
            branches:
              only:
                - master                
