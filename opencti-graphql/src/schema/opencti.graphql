### Scalar
scalar DateTime

### Relay
type PageInfo {
    startCursor: String!,
    endCursor: String!,
    hasNextPage: Boolean!,
    hasPreviousPage: Boolean!
}

### User
enum UserConnectionSort {
    ID,
    EMAIL
}
enum UserRole {
    ROLE_ADMIN
    ROLE_USER
}
type UserConnection {
    pageInfo: PageInfo!
    edges: [UserEdge]
}
type UserEdge {
    cursor: String!
    node: User!
}
type User {
    id: ID!
    username: String
    email: String!
    created_at: DateTime
    updated_at: DateTime
    roles: [String]
}
input UserAddInput {
    username: String!
    password: String!
    roles: [UserRole]!
    email: String!
}
input UserLoginInput {
    username: String!
    password: String!
}

### Malware
type Malware {
    id: ID!
    name: String
    description: String
    created_at: DateTime
    updated_at: DateTime
    created: DateTime
    modified: DateTime
    revoked: Boolean
}
input MalwareAddInput {
    name: String!
    description: String!
    created: DateTime
    modified: DateTime
    revoked: Boolean
}

### QUERIES
type Query {
    # User
    users(first: Int, after: String, order: UserConnectionSort): UserConnection
    user(id: String!): User
    me: User
}

### SUBSCRIPTIONS
type Subscription {
    userAdded: User
    malwareAdded: Malware
}

### MUTATIONS
type Mutation {
    # Login
    token(input: UserLoginInput) : String
    # User
    userAdd(input: UserAddInput): User
    userDelete(id: ID!): ID
    # Malware
    malwareAdd(input: MalwareAddInput): Malware
    malwareDelete(id: ID!): ID
}

