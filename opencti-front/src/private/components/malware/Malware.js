import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { compose, propOr } from 'ramda';
import { Link } from 'react-router-dom';
import { createFragmentContainer } from 'react-relay';
import graphql from 'babel-plugin-relay/macro';
import { withStyles } from '@material-ui/core/styles';
import Grid from '@material-ui/core/Grid';
import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import Chip from '@material-ui/core/Chip';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemIcon from '@material-ui/core/ListItemIcon';
import ListItemText from '@material-ui/core/ListItemText';
import { Description } from '@material-ui/icons';
import inject18n from '../../../components/i18n';
import ItemMarking from '../../../components/ItemMarking';
import truncate from '../../../utils/String';
import MalwarePopover from './MalwarePopover';
import MalwareOverview from './MalwareOverview';

const styles = theme => ({
  title: {
    float: 'left',
    textTransform: 'uppercase',
  },
  popover: {
    float: 'left',
    marginTop: -13,
  },
  aliases: {
    float: 'right',
  },
  alias: {
    marginRight: 7,
  },
  paper: {
    margin: '10px 0 0 0',
    padding: '15px',
    backgroundColor: theme.palette.paper.background,
    color: theme.palette.text.main,
    borderRadius: 6,
  },
  paperFull: {
    margin: '10px 0 0 0',
    padding: 0,
    backgroundColor: theme.palette.paper.background,
    color: theme.palette.text.main,
    borderRadius: 6,
  },
  item: {
    height: 60,
    minHeight: 60,
    maxHeight: 60,
    transition: 'background-color 0.1s ease',
    paddingRight: 0,
    cursor: 'pointer',
    '&:hover': {
      background: 'rgba(0, 0, 0, 0.1)',
    },
    itemIcon: {
      marginRight: 0,
      color: theme.palette.primary.main,
    },
  },
});

const inlineStyles = {
  itemDate: {
    fontSize: 11,
    width: 80,
    minWidth: 80,
    maxWidth: 80,
    marginRight: 24,
    textAlign: 'right',
    color: '#ffffff',
  },
};

class MalwareComponent extends Component {
  deleteAlias(alias) {
    return false;
  }

  render() {
    const { t, classes, malware } = this.props;
    return (
      <div>
        <Typography variant='h1' gutterBottom={true} classes={{ root: classes.title }}>
          {propOr('-', 'name', malware)}
        </Typography>
        <div className={classes.popover}>
          <MalwarePopover/>
        </div>
        <div className={classes.aliases}>
          {propOr([], 'stix_label', malware).map(label => <Chip key={label} classes={{ root: classes.alias }} label='Test 1' onDelete={this.deleteAlias.bind(this, 'Test 1')}/>)}
          <Chip classes={{ root: classes.alias }} label='Test 1' onDelete={this.deleteAlias.bind(this, 'Test 1')}/>
        </div>
        <div className='clearfix'/>
        <Grid container={true} spacing={16}>
          <Grid item={true} xs={6}>
            <MalwareOverview malware={malware} />
          </Grid>
          <Grid item={true} xs={6}>
            <Typography variant='h4' gutterBottom={true}>
              {t('Last reports')}
            </Typography>
            <Paper classes={{ root: classes.paperFull }} elevation={2}>
              <List>
                <ListItem
                  dense={true}
                  classes={{ default: classes.item }}
                  divider={true}
                  component={Link}
                  to={'/dashboard/reports/'}
                >
                  <ListItemIcon classes={{ root: classes.itemIcon }}>
                    <Description/>
                  </ListItemIcon>
                  <ListItemText primary={truncate('dsqd sdqsd qsdqs dqsd qsd qsdqs ', 120)} secondary={truncate('dfsfds fdsf sdf sdfsdfdsf sdf sdf sdf sdfsd fdsf sdfsdf sdfs fdsdf sdf', 150)}/>
                  <div style={{ minWidth: 100 }}>
                    <ItemMarking label='TLP:RED' position='normal'/>
                  </div>
                  <div style={inlineStyles.itemDate}>28 mai 2018</div>
                </ListItem>
                <ListItem
                  dense={true}
                  classes={{ default: classes.item }}
                  divider={true}
                  component={Link}
                  to={'/dashboard/reports/'}
                >
                  <ListItemIcon classes={{ root: classes.itemIcon }}>
                    <Description/>
                  </ListItemIcon>
                  <ListItemText primary={truncate('dsqd sdqsd qsdqs dqsd qsd qsdqs ', 120)} secondary={truncate('dfsfds fdsf sdf sdfsdfdsf sdf sdf sdf sdfsd fdsf sdfsdf sdfs fdsdf sdf', 150)}/>
                  <div style={{ minWidth: 100 }}>
                    <ItemMarking label='TLP:RED' position='normal'/>
                  </div>
                  <div style={inlineStyles.itemDate}>28 mai 2018</div>
                </ListItem>
                <ListItem
                  dense={true}
                  classes={{ default: classes.item }}
                  divider={true}
                  component={Link}
                  to={'/dashboard/reports/'}
                >
                  <ListItemIcon classes={{ root: classes.itemIcon }}>
                    <Description/>
                  </ListItemIcon>
                  <ListItemText primary={truncate('dsqd sdqsd qsdqs dqsd qsd qsdqs ', 120)} secondary={truncate('dfsfds fdsf sdf sdfsdfdsf sdf sdf sdf sdfsd fdsf sdfsdf sdfs fdsdf sdf', 150)}/>
                  <div style={{ minWidth: 100 }}>
                    <ItemMarking label='TLP:RED' position='normal'/>
                  </div>
                  <div style={inlineStyles.itemDate}>28 mai 2018</div>
                </ListItem>
                <ListItem
                  dense={true}
                  classes={{ default: classes.item }}
                  divider={true}
                  component={Link}
                  to={'/dashboard/reports/'}
                >
                  <ListItemIcon classes={{ root: classes.itemIcon }}>
                    <Description/>
                  </ListItemIcon>
                  <ListItemText primary={truncate('dsqd sdqsd qsdqs dqsd qsd qsdqs ', 120)} secondary={truncate('dfsfds fdsf sdf sdfsdfdsf sdf sdf sdf sdfsd fdsf sdfsdf sdfs fdsdf sdf', 150)}/>
                  <div style={{ minWidth: 100 }}>
                    <ItemMarking label='TLP:RED' position='normal'/>
                  </div>
                  <div style={inlineStyles.itemDate}>28 mai 2018</div>
                </ListItem>
                <ListItem
                  dense={true}
                  classes={{ default: classes.item }}
                  divider={true}
                  component={Link}
                  to={'/dashboard/reports/'}
                >
                  <ListItemIcon classes={{ root: classes.itemIcon }}>
                    <Description/>
                  </ListItemIcon>
                  <ListItemText primary={truncate('dsqd sdqsd qsdqs dqsd qsd qsdqs ', 120)} secondary={truncate('dfsfds fdsf sdf sdfsdfdsf sdf sdf sdf sdfsd fdsf sdfsdf sdfs fdsdf sdf', 150)}/>
                  <div style={{ minWidth: 100 }}>
                    <ItemMarking label='TLP:RED' position='normal'/>
                  </div>
                  <div style={inlineStyles.itemDate}>28 mai 2018</div>
                </ListItem>
              </List>
            </Paper>
          </Grid>
        </Grid>
      </div>
    );
  }
}

MalwareComponent.propTypes = {
  malware: PropTypes.object,
  classes: PropTypes.object,
  t: PropTypes.func,
};

const Malware = createFragmentContainer(MalwareComponent, {
  malware: graphql`
      fragment Malware_malware on Malware {
          id,
          name,
          stix_label,
          ...MalwareOverview_malware,
      }
  `,
});

export default compose(
  inject18n,
  withStyles(styles),
)(Malware);
