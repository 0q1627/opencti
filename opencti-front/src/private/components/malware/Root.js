import React, { Component } from 'react';
import * as PropTypes from 'prop-types';
import { Route, withRouter } from 'react-router-dom';
import graphql from 'babel-plugin-relay/macro';
import { QueryRenderer } from '../../../relay/environment';
import TopBar from '../nav/TopBar';
import Malware from './Malware';
import MalwareReports from './MalwareReports';

const malwareQuery = graphql`
    query RootMalwareQuery($id: String!) {
        malware(id: $id) {
            ...Malware_malware
            ...MalwareReports_malware
            ...MalwareHeader_malware
            ...MalwareOverview_malware
        }
    }
`;

class RootMalware extends Component {
  render() {
    const { me, match: { params: { malwareId } } } = this.props;
    return (
      <div>
        <TopBar me={me || null}/>
        <QueryRenderer
          query={malwareQuery}
          variables={{ id: malwareId }}
          render={({ props }) => {
            if (props && props.malware) {
              return (
                <div>
                  <Route exact path='/dashboard/knowledge/malwares/:malwareId' render={
                    routeProps => <Malware {...routeProps} malware={props.malware}/>
                  }/>
                  <Route exact path='/dashboard/knowledge/malwares/:malwareId/reports' render={
                    routeProps => <MalwareReports {...routeProps} malware={props.malware}/>
                  }/>
                </div>
              );
            }
            return (
              <div> &nbsp; </div>
            );
          }}
        />
      </div>
    );
  }
}

RootMalware.propTypes = {
  children: PropTypes.node,
  match: PropTypes.object,
  me: PropTypes.object,
};

export default withRouter(RootMalware);
