import { BUS_TOPICS } from '../config/conf';
import {
  addMalware,
  malwareDelete,
  findAll,
  findById,
  markingDefinitions,
  killChainPhases,
  malwareEditContext,
  malwareEditField,
  malwareAddRelation,
  malwareDeleteRelation,
  malwareCleanContext
} from '../domain/malware';
import { fetchEditContext, pubsub } from '../database/redis';
import { admin, auth, withCancel } from './wrapper';

const malwareResolvers = {
  Query: {
    malware: auth((_, { id }) => findById(id)),
    malwares: auth((_, args) => findAll(args))
  },
  Malware: {
    markingDefinitions: (malware, args) => markingDefinitions(malware.id, args),
    killChainPhases: (malware, args) => killChainPhases(malware.id, args),
    editContext: admin(malware => fetchEditContext(malware.id))
  },
  Mutation: {
    malwareEdit: admin((_, { id }, { user }) => ({
      delete: () => malwareDelete(id),
      fieldPatch: ({ input }) => malwareEditField(id, input),
      contextPatch: ({ input }) => malwareEditContext(user, id, input),
      relationAdd: ({ input }) => malwareAddRelation(id, input),
      relationDelete: ({ relationId }) => malwareDeleteRelation(relationId)
    })),
    malwareAdd: admin((_, { input }, { user }) => addMalware(user, input))
  },
  Subscription: {
    malwareEdit: {
      resolve: payload => ({
        malware: payload.instance,
        context: payload.context
      }),
      subscribe: admin((_, { id }, { user }) =>
        withCancel(pubsub.asyncIterator(BUS_TOPICS.Malware.EDIT_TOPIC), () => {
          malwareCleanContext(user, id);
        })
      )
    }
  }
};

export default malwareResolvers;
