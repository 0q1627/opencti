### Scalar
scalar DateTime

### User
type User {
    id: ID!
    username: String
    email: String!
    created_at: DateTime
    updated_at: DateTime
    roles: [String]
}

enum UserRole {
    ROLE_ADMIN
    ROLE_USER
}

input AddUserInput {
    username: String!
    password: String!
    roles: [UserRole]!
    email: String!
}

type TestDefer {
    me: User,
    users: [User]
}

### QUERIES
type Query {
    # User
    users(first: Int, offset: Int): [User]
    user(id: String!): User
    me: User,
    testDefer: TestDefer
}

### SUBSCRIPTIONS
type Subscription {
    userAdded: User
}

### MUTATIONS
type Mutation {
    # User
    addUser(input: AddUserInput): User
    deleteUser(id: ID!): ID
}

