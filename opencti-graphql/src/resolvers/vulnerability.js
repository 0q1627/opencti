import {
  addVulnerability,
  vulnerabilityDelete,
  findAll,
  findById,
  createdByRef,
  markingDefinitions,
  reports,
  vulnerabilityEditContext,
  vulnerabilityEditField,
  vulnerabilityAddRelation,
  vulnerabilityDeleteRelation,
} from '../domain/vulnerability';
import { fetchEditContext } from '../database/redis';
import { auth } from './wrapper';

const vulnerabilityResolvers = {
  Query: {
    vulnerability: auth((_, { id }) => findById(id)),
    vulnerabilities: auth((_, args) => findAll(args))
  },
  Vulnerability: {
    createdByRef: (vulnerability, args) => createdByRef(vulnerability.id, args),
    markingDefinitions: (vulnerability, args) => markingDefinitions(vulnerability.id, args),
    reports: (vulnerability, args) => reports(vulnerability.id, args),
    editContext: auth(vulnerability => fetchEditContext(vulnerability.id))
  },
  Mutation: {
    vulnerabilityEdit: auth((_, { id }, { user }) => ({
      delete: () => vulnerabilityDelete(id),
      fieldPatch: ({ input }) => vulnerabilityEditField(user, id, input),
      contextPatch: ({ input }) => vulnerabilityEditContext(user, id, input),
      relationAdd: ({ input }) => vulnerabilityAddRelation(user, id, input),
      relationDelete: ({ relationId }) =>
        vulnerabilityDeleteRelation(user, id, relationId)
    })),
    vulnerabilityAdd: auth((_, { input }, { user }) => addVulnerability(user, input))
  }
};

export default vulnerabilityResolvers;
