import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Route, withRouter } from 'react-router-dom';
import { QueryRenderer } from 'react-relay';
import graphql from 'babel-plugin-relay/macro';
import environment from '../../../relay/environment';
import TopBar from '../nav/TopBar';
import Malware from './Malware';

const malwareQuery = graphql`
    query RootMalwareQuery($id: String!) {
        malware(id: $id) {
            ...Malware_malware
            ...MalwareHeader_malware
            ...MalwareOverview_malware
        }
    }
`;

class RootMalware extends Component {
  render() {
    const { me, match: { params: { malwareId } } } = this.props;
    return (
      <div>
        <TopBar me={me || null}/>
        <QueryRenderer
          environment={environment}
          query={malwareQuery}
          variables={{ id: malwareId }}
          render={({ props }) => (
            <Route exact path='/dashboard/knowledge/malwares/:malwareId' render={routeProps => <Malware
              {...routeProps}
              malwareId={malwareId}
              malware={props && props.malware ? props.malware : null}/>
            }/>
          )}
        />
      </div>
    );
  }
}

RootMalware.propTypes = {
  children: PropTypes.node,
  match: PropTypes.object,
  me: PropTypes.object,
};

export default withRouter(RootMalware);
