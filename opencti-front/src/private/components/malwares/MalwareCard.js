import React, {Component} from 'react';
import {Link} from 'react-router-dom';
import {createFragmentContainer} from 'react-relay';
import graphql from 'babel-plugin-relay/macro';
import {injectIntl} from "react-intl";
import {withStyles} from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography'
import Card from '@material-ui/core/Card'
import CardActionArea from '@material-ui/core/CardActionArea'
import CardHeader from '@material-ui/core/CardHeader'
import CardContent from '@material-ui/core/CardContent'
import Avatar from '@material-ui/core/Avatar'
import {truncate} from '../../../utils/String'

const styles = theme => ({
  card: {
    width: '100%',
    height: '100%',
    backgroundColor: theme.palette.paper.background,
    color: theme.palette.text.main,
    borderRadius: 6
  },
  cardDummy: {
    width: '100%',
    height: '100%',
    backgroundColor: theme.palette.paper.background,
    color: theme.palette.text.disabled,
    borderRadius: 6
  },
  avatar: {
    backgroundColor: theme.palette.primary.main
  },
  avatarDisabled: {
    backgroundColor: theme.palette.text.disabled,
  },
  area: {
    width: '100%',
    height: '100%',
  },
  content: {
    width: '100%',
    height: '100%',
    paddingTop: 0
  },
  footer: {
    width: '100%',
    height: 30
  },
  placeholder: {
    display: 'inline-block',
    height: '1em',
    backgroundColor: theme.palette.text.disabled
  },
  placeholderDark: {
    display: 'inline-block',
    height: '1em',
    backgroundColor: theme.palette.text.disabledDark
  }
})

class MalwareCardComponent extends Component {
  render() {
    const {intl, classes, malware} = this.props
    return (
      <Card classes={{root: classes.card}} raised={true}>
        <CardActionArea classes={{root: classes.area}} component={Link} to={'/dashboard/malwares/' + malware.id}>
          <CardHeader
            avatar={<Avatar className={classes.avatar}>{malware.name.charAt(0)}</Avatar>}
            title={malware.name}
            subheader={intl.formatMessage({id: 'Updated the'}) + ' ' + intl.formatDate(malware.modified, {day: 'numeric', month: 'short', year: 'numeric'})}
          />
          <CardContent classes={{root: classes.content}}>
            <Typography component='p'>
              {truncate(malware.description, 200)}
            </Typography>
          </CardContent>
        </CardActionArea>
      </Card>
    )
  }
}

export const MalwareCard = injectIntl(withStyles(styles)(createFragmentContainer(MalwareCardComponent, {
  malware: graphql`
      fragment MalwareCard_malware on Malware {
          id,
          name,
          description,
          created,
          modified
      }
  `,
})));

class MalwareCardDummyComponent extends Component {
  render() {
    const {classes} = this.props
    return (
      <Card classes={{root: classes.cardDummy}} raised={true}>
        <CardActionArea classes={{root: classes.area}}>
          <CardHeader
            avatar={<Avatar className={classes.avatarDisabled}>D</Avatar>}
            title={<div className={classes.placeholder} style={{width: '85%'}}/>}
            titleTypographyProps={{color: 'inherit'}}
            subheader={<div className={classes.placeholderDark} style={{width: '70%'}}/>}
          />
          <CardContent classes={{root: classes.content}}>
            <div className={classes.placeholder} style={{width: '90%'}}/>
            <div className={classes.placeholder} style={{width: '95%'}}/>
            <div className={classes.placeholder} style={{width: '90%'}}/>
            <div className={classes.placeholder} style={{width: '85%'}}/>
          </CardContent>
        </CardActionArea>
      </Card>
    )
  }
}

export const MalwareCardDummy = injectIntl(withStyles(styles)(MalwareCardDummyComponent))