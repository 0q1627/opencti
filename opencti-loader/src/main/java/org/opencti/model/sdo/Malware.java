package org.opencti.model.sdo;

import org.opencti.model.database.LoaderDriver;

import static java.lang.String.format;
import static org.opencti.model.database.BaseQuery.from;

public class Malware extends Domain {

    /*
        private List<String> label;

    private String created;
    private String modified;
    private Boolean revoked;
    private String created_by_ref;
    private List<String> object_marking_refs;
     */

    //Nothing
    @Override
    public void grakn(LoaderDriver driver) {
        String type = this.getClass().getSimpleName();
        //match $p has identifier "Mary Guthrie"; insert $p has middlename "Mathilda"; $p has birth-date 1902-01-01; $p has death-date 1952-01-01; $p has age 50;
        //insert $57472 isa person has firstname "Mary" has identifier "Mary Guthrie" has surname "Guthrie" has gender "female";
        Object malware = driver.execute(from(format("match $m isa %s has stix_id \"%s\"; get;", type, getId())));
        if (malware == null) { //Only create if the malware doesn't exists
            String query = format("insert $m isa %s " +
                            "has stix_id \"%s\" " +
                            "has name \"%s\" " +
                            "%s " +
                            "has description \"%s\" " +
                            "has revoked %s " +
                            "has created %s;",
                    type,
                    getId(),
                    getName(),
                    getLabelChain(),
                    clean(getDescription()),
                    getRevoked(),
                    getCreated());
            driver.execute(from(query));
        }
    }

    private String name;
    private String description;

    //region fields
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
    //endregion
}
