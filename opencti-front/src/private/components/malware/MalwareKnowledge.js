import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { withRouter } from 'react-router-dom';
import { compose } from 'ramda';
import { createFragmentContainer } from 'react-relay';
import graphql from 'babel-plugin-relay/macro';
import { withStyles } from '@material-ui/core/styles';
import inject18n from '../../../components/i18n';
import MalwareHeader from './MalwareHeader';
import MalwareKnowledgeBar from './MalwareKnowledgeBar';
import EntityStixRelations from '../stix_relation/EntityStixRelations';

const styles = () => ({
  container: {
    margin: 0,
  },
  content: {
    paddingRight: 260,
  },
});

class MalwareKnowledgeComponent extends Component {
  render() {
    const { classes, malware, location } = this.props;
    return (
      <div className={classes.container}>
        <MalwareHeader malware={malware} variant='noalias'/>
        <MalwareKnowledgeBar malwareId={malware.id}/>
        <div className={classes.content}>
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/campaigns` ? '' : ''}
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/incidents` ? '' : ''}
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/victimology`
            ? <EntityStixRelations
              entityId={malware.id}
              relationType='targets'
              entityLink={`/dashboard/knowledge/malwares/${malware.id}/knowledge`}/> : ''}
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/ttp` ? '' : ''}
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/tools` ? '' : ''}
          {location.pathname === `/dashboard/knowledge/malwares/${malware.id}/knowledge/vulnerabilities` ? '' : ''}
        </div>
      </div>
    );
  }
}

MalwareKnowledgeComponent.propTypes = {
  malware: PropTypes.object,
  classes: PropTypes.object,
  location: PropTypes.object,
  t: PropTypes.func,
};

const MalwareKnowledge = createFragmentContainer(MalwareKnowledgeComponent, {
  malware: graphql`
      fragment MalwareKnowledge_malware on Malware {
          id
          ...MalwareHeader_malware
      }
  `,
});

export default compose(
  inject18n,
  withRouter,
  withStyles(styles),
)(MalwareKnowledge);
